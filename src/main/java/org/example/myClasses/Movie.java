package org.example.myClasses;

import java.io.Serializable;
import java.time.LocalDate;

import org.example.myClasses.enums.*;

/**
 * Class of Movie main object class
 * @author Daniel
 */
public class Movie implements Serializable, Comparable<Movie> {//Serializable для разбития на биты и возвращения
    /** Поле id*/
    private Long id = Id.incAndGet(); //Поле айди. Условия содержания: не может быть null, Значение поля должно быть больше 0, Значение этого поля должно быть уникальным, Значение этого поля должно генерироваться автоматически.
    /** Поле имени*/
    private String name; // поле имени - не может быть null и не может быть пустым.
    /** Поле координат
     * @see Coordinates*/
    private Coordinates coordinates; //Поле координат - не может быть null.
    /** Поле даты создания*/
    private final java.time.LocalDate creationDate = LocalDate.now(); //Поле даты создания объекта по ISO-8601 - поле не может быть null, Значение этого поля должно генерироваться автоматически.
    /** Поле полученных оскаров*/
    private Integer oscarsCount; //Поле может быть null, значение поля должно быть больше 0;
    /** Поле жанра*/
    private MovieGenre genre; //Поле не может быть null
    /** Поле рейтинга*/
    private MpaaRating mpaaRating; //Поле не может быть null
    /** Поле оператора*/
    private Person operator; //Поле может быть null

     /**
     * Constructor, id and CreationTime autogenerated
     * @param name
     * @param coordinates
     * @param oscarsCount
     * @param genre
     * @param mpaaRating
     * @param operator
     */
    public Movie(String name, Coordinates coordinates, Integer oscarsCount, MovieGenre genre, MpaaRating mpaaRating, Person operator) {
        this.name = name;
        this.coordinates = coordinates;
        this.oscarsCount = oscarsCount;
        this.genre = genre;
        this.mpaaRating = mpaaRating;
        this.operator = operator;
    }
    /**
     * set {@link Movie#name}
     * @param name
     */
    public void setName(String name){
        this.name = name;
    }
    /**
     * set {@link Movie#coordinates}
     * @param cords
     */
    public void setCoordinates(Coordinates cords){
        this.coordinates = cords;
    }
    /**
     * set {@link Movie#oscarsCount}
     * @param oscarsCount
     */
    public void setOscarsCount(Integer oscarsCount){
        this.oscarsCount = oscarsCount;
    }
    /**
     * set {@link Movie#genre}
     * @param genre
     */
    public void setGenre(MovieGenre genre){
        this.genre = genre;
    }
    /**
     * set {@link Movie#mpaaRating}
     * @param rating
     */
    public void setMpaaRating(MpaaRating rating){
        this.mpaaRating = rating;
    }
    /**
     * set {@link Movie#operator}
     * @param operator
     */
    public void setOperator(Person operator){
        this.operator = operator;
    }


    /**
     * @return {@link Movie#id}
     */
    public Long getId() {
        return id;
    }
    /**
     * @return {@link Movie#name}
     */
    public String getName() {
        return name;
    }
    /**
     * @return {@link Movie#coordinates}
     */
    public Coordinates getCoordinates() {
        return coordinates;
    }
    /**
     * @return {@link  Movie#oscarsCount}
     */
    public Integer getOscarsCount() {
        return oscarsCount;
    }
    /**
     * @return {@link  Movie#genre}
     */
    public MovieGenre getGenre() {
        return genre;
    }
    /**
     * @return {@link  Movie#mpaaRating}
     */
    public MpaaRating getMpaaRating() {
        return mpaaRating;
    }
    /**
     * @return {@link  Movie#operator}
     */
    public Person getOperator() {
        return operator;
    }

    /**
     * Сортировка по id
     * @param movie the object to be compared.
     */
    @Override
    public int compareTo(Movie movie) {
        return this.id.compareTo(movie.id);
    }

    /**
     * вывод объекта
     * @return строку для дальнейшего вывода объекта в поток вывода
     */

    @Override
    public String toString() {
        return "Movie{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", coordinates=" + coordinates +
                ", creationDate=" + creationDate +
                ", oscarsCount=" + oscarsCount +
                ", genre=" + genre +
                ", mpaaRating=" + mpaaRating +
                ", operator=" + operator +
                '}';
    }
}
